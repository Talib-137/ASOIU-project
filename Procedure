
CREATE OR REPLACE PROCEDURE ALL_EMPLOYEES_DATA
IS
BEGIN
  FOR E IN (SELECT * FROM EMPLOYEES) LOOP
    DBMS_OUTPUT.PUT_LINE('E ID: ' || E.E_ID || ', Name: ' || E.E_NAME || ' ' || 
    E.E_SURNAME || ', Email: ' || E.E_EMAIL || ', Salary: ' || E.E_SALARY || ', Address: ' || 
    E.E_ADRESS || ', Department ID: ' || E.D_ID || ', CURRENCY ID: ' || E.C_ID || ',
    Job ID: ' || E.JOB_ID || ', Manager ID: ' || E.MANAGER_ID || ', Hire Date: ' || E.HIRE_DATE);
  END LOOP;
END;
/
EXECUTE ALL_EMPLOYEES_DATA;





CREATE OR REPLACE PROCEDURE AVERAGE_SALARY
  (FILIAL_ID IN NUMBER, AVG_SALARY OUT NUMBER)
AS
BEGIN
  SELECT AVG(E_SALARY) INTO AVG_SALARY
  FROM EMPLOYEES
  WHERE D_ID = FILIAL_ID;
END;
/
DECLARE
  V_AVG_SALARY NUMBER;
BEGIN
  AVERAGE_SALARY(FILIAL_ID => 11, AVG_SALARY => V_AVG_SALARY);
  DBMS_OUTPUT.PUT_LINE('AVERAGE SALARY OF DEPARTMENT 11 IS: ' || V_AVG_SALARY);
END;
/
EXECUTE AVERAGE_SALARY;







CREATE OR REPLACE PROCEDURE NETTT_SALARY(E_SALARY NUMBER) IS
  NET_SALARY NUMBER:=0;
BEGIN
  SELECT E_SALARY - VERGI AS NET_SALARY 
  INTO NET_SALARY 
  FROM (
    SELECT E_SALARY - (
      (CASE WHEN E_SALARY < 2500 THEN (E_SALARY - 200) * 0.14 
      ELSE 350 + (E_SALARY - 2500) * 0.25 END) 
      + (E_SALARY * 0.03) 
      + (E_SALARY * 0.005) 
      + (CASE WHEN E_SALARY < 8000 THEN E_SALARY * 0.02 
      ELSE 160 + (E_SALARY - 8000) * 0.005 END)
    ) AS VERGI 
    FROM DUAL
  );
  DBMS_OUTPUT.PUT_LINE('NET SALARY :' || NET_SALARY);
END;
/
BEGIN
  NETTT_SALARY(2000); 
END;
/






CREATE OR REPLACE PROCEDURE EMPLOYEES_DATA
IS
BEGIN
  FOR E IN (SELECT * FROM EMPLOYEES WHERE E_SALARY BETWEEN 1000 AND 2000) LOOP
    DBMS_OUTPUT.PUT_LINE('E ID: ' || E.E_ID || ', Name: ' || E.E_NAME || ' ' || 
    E.E_SURNAME || ', Email: ' || E.E_EMAIL || ', Salary: ' || E.E_SALARY || ', Address: ' || 
    E.E_ADRESS || ', Department ID: ' || E.D_ID || ', CURRENCY ID: ' || E.C_ID || ',
    Job ID: ' || E.JOB_ID || ', Manager ID: ' || E.MANAGER_ID || ', Hire Date: ' || E.HIRE_DATE);
  END LOOP;
END;
/
EXECUTE EMPLOYEES_DATA;
